@model IEnumerable<CoffeeCashlessWeb.ViewModels.TransactionSimpleViewModel>

<head>


    <script>
        $(document).ready(function () {
            $('#RefreshPage').click(function () {
                window.location.reload();
            });
        });
    </script>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

    @{ List<decimal> AmountYear = new List<decimal>(); }
    @for (int i = 0; i < 12; i++)
    {
        AmountYear.Add(0);

    }
    @{ decimal total = 0;}
    @foreach (var item in Model)
    {

        total += item.Price;


        if (item.TotalYear != null)
        {
            AmountYear = item.TotalYear;
        }

    }



    <script type="text/javascript">



        window.onload = function () {



                var chart = new CanvasJS.Chart("chartContainer", {
                    title: {
                        text: "Total Amount"
                    },
                    data: [
                        {

                            type: "column",
                            dataPoints: [

				                { label: "Janvier", y: @AmountYear[0] },
                                { label: "Février", y:  @AmountYear[1]  },
                                { label: "Mars", y: @AmountYear[2]  },
                                { label: "Avril", y:  @AmountYear[3]  },
                                { label: "Mail", y:  @AmountYear[4]  },
                                { label: "Juin", y: @AmountYear[5]  },
                                { label: "Juillet", y:  @AmountYear[6]  },
                                { label: "Août", y:  @AmountYear[7]  },
                                { label: "Septembre", y:  @AmountYear[8]  },
                                { label: "Octobre", y:  @AmountYear[9]  },
                                { label: "Novembre", y:  @AmountYear[10]  },
                                { label: "Décembre", y:  @AmountYear[11]  }
                            ]
                        }
                    ]
                });

                chart.render();


        }
    </script>


    @{ Boolean b = true;}
    @try
    {
        foreach (var item in Model)
        {
            total += item.Price;

            if (item.Date < new DateTime(2010, 01, 01))
            {
                b = false;
            }
        }


    }
    catch (Exception e)
    {

    }





    <style>
        #refresh {
            margin-top: 20px;
            display: block;
            width: 80%;
            margin-left: 15%;
            margin-right: 15%;
            text-align: center;
        }

        /*table*/
        table.transaction {
            text-align: center;
            table-layout: fixed;
            display: block;
            margin-top: 50px;
            height: 100%;
            width: 60%;
            margin-left: 25%;
            margin-right: 15%;
            overflow-y: scroll;
            border-collapse: collapse;
            background: none;
            margin-bottom: 50px;
        }

            table.transaction td, table.transaction th {
                border: 1px solid black;
                padding: 3px 2px;
                width: 200px;
            }

            table.transaction thead {
                background: black;
                background: -moz-linear-gradient(top, silver 0%, );
                background: -webkit-linear-gradient(top, silver 0%);
                background: linear-gradient(to bottom, silver 0%);
                border-bottom: 2px solid black;
            }

                table.transaction thead th {
                    font-size: 16px;
                    font-weight: bold;
                    color: silver;
                    text-align: center;
                    border-left: 2px solid black;
                }

                    table.transaction thead th:first-child {
                        border-left: none;
                    }

            table.transaction tbody td {
                font-size: 13px;
                color: black;
            }

            table.transaction td {
                font-size: 14px;
                color: silver;
            }

        #chartContainer {
            height: 300px;
            width: 100%;
        }

        input.btn-primary {
            background-color: black;
            color: silver;
            border-color: black;
        }

            input.btn-primary:hover {
                background-color: silver;
                color: black;
                border-color: silver;
            }
    </style>
</head>


<div id="refresh">
    <form method="post">
        <input type="text" name="year" id="year" placeholder="2020" />
        <input type="text" name="month" id="month" placeholder="01" />
        <input type="submit" name="sub" class="btn btn-primary" value="Display" />
        <input type="submit" id="RefreshPage" class="btn btn-primary" value="Refresh" name="Command" />
    </form>
</div>

@try
{
    if (b)
    {
        <table class="transaction table-striped">

            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.IdAccount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IdProduct)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Date)
                    </th>
                    <th>
                        Détails
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.IdAccount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IdProduct)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                    </tr>
                }
            </tbody>

        </table>

        <div id="chartContainer"></div>
    }
    else
    {
        <h2>No transaction found</h2>
    }
}
catch (Exception e)
{
    <h2>No transaction found</h2>
}
